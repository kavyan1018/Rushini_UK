Definition of Hardware
-----------------------

Hardware refers to the physical components of a computer system that you can touch and see. 

These components include:

input devices : (keyboard, mouse, scanner)
output devices : (monitor, printer, speakers)
internal components : (CPU, RAM, hard drive, mother board)

CPU : Central Processing Unit
RAM : Random Access Memory



Definition of Software
-------------------------

Software is the set of instructions that tell the hardware what to do. It is intangible and cannot be touched or seen.

System software : (operating system, device drivers)
operating system : (Windows, Mac OS, Linux) which is manage the hardware resources

Application software : Program designed for users to perform specific tasks. (Word, Excel, Photoshop)



Relationship Between Hardware and Software
--------------------------------------------

Dependence: Hardware and software are interdependent. Hardware cannot function without software to tell it what to do, and software cannot operate without the physical resources provided by hardware.


Interaction: Software sends instructions to the hardware. For example, when you run a program, the software communicates with the CPU to perform computations, RAM to store temporary data, and storage drives to save files.

u type code in vs --> it is software
u see the output in monitor --> it is hardware
internal process of computer system --> vs code -> cpu(binarry code) -> ram -> hard drive -> mother board -> monitor

Examples:
A printer (hardware) needs printer driver software to understand and execute the commands sent by a computer.
The CPU executes instructions from system software like the operating system to manage resources like memory and storage.


Logic Gates and Truth Tables including combined logic gatesÂ 


Logic Gates
------------
Logic gates are the building blocks of digital circuits. They perform basic logical functions based on Boolean algebra. There are seven basic logic gates:


AND Gate: Output is true only if all inputs are true.
OR Gate: Output is true if any input is true.
NOT Gate: Output is the opposite of the input.
XOR Gate: Output is true if exactly one input is true.

Examples : 

take input from usear and cheak the number is divisible by 3 and 11 or not   -> And gate  &&
take input from user and cheak the number is even or odd   -> Or gate  ||
take input from user and cheak the number is positive or negative   -> Not gate  !
take input from user and cheak the number is prime or not   -> Xor gate  ^